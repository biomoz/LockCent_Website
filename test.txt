without encryption:

	$string = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		$ekey= substr(str_shuffle($string),0,25);

		$email = $_POST['email'];
		$username = $_POST['username'];
		$password = $_POST['password'];
		$sql ="INSERT INTO useraccounts_test (email, username, password, ekey ) VALUES(:email,:username,:password, :ekey)";

		$stmtinsert = $db->prepare($sql);
		$stmtinsert->bindParam(':email', $email);
		$stmtinsert->bindParam(':username', $username);
		$stmtinsert->bindParam(':password', $password);
		$stmtinsert->bindParam(':ekey', $ekey);
		$result = $stmtinsert->execute();

		if($result){
		echo 'Successfully saved.';
		}else{
		echo 'Failed.';
		}




xampp server needed apache and mysql


full encryption update 1:

	if(isset($_POST['create'])){
		$method = 'aes-256-cbc';
		$string = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		$ekey= substr(str_shuffle($string),0,25);
		$ekey = substr(hash('sha256', $ekey, true), 0, 32);

		$iv = chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0);

		$email = $_POST['email'];
		$username = $_POST['username'];
		$password = $_POST['password'];

		$enc_email = base64_encode(openssl_encrypt($email, $method, $ekey, OPENSSL_RAW_DATA, $iv));
		$dec_email = openssl_decrypt(base64_decode($enc_email), $method, $ekey, OPENSSL_RAW_DATA, $iv);

		$enc_usr = base64_encode(openssl_encrypt($username, $method, $ekey, OPENSSL_RAW_DATA, $iv));
		$dec_usr = openssl_decrypt(base64_decode($enc_usr), $method, $ekey, OPENSSL_RAW_DATA, $iv);

		$enc_pass = base64_encode(openssl_encrypt($password, $method, $ekey, OPENSSL_RAW_DATA, $iv));
		$dec_pass = openssl_decrypt(base64_decode($enc_pass), $method, $ekey, OPENSSL_RAW_DATA, $iv);
		
		$sql ="INSERT INTO useraccounts_test (email, username, password, ekey ) VALUES(:email,:username,:password, :ekey)";
		
		
		echo 'ekey=' . $ekey . "\n";
		echo 'cipher=' . $method . "\n";
		echo 'enc_email to: ' . $enc_email . "\n";
		echo 'dec_email to: ' . $dec_email . "\n\n";
		echo 'enc_usr to: ' . $enc_usr . "\n";
		echo 'dec_usr to: ' . $dec_usr . "\n\n";
		echo 'enc_pass to: ' . $enc_pass . "\n";
		echo 'dec_pass to: ' . $dec_pass . "\n\n";


		$stmtinsert = $db->prepare($sql);
		$stmtinsert->bindParam(':email', $enc_email);
		$stmtinsert->bindParam(':username', $enc_usr);
		$stmtinsert->bindParam(':password', $enc_pass);
		$stmtinsert->bindParam(':ekey', $ekey);
		$result = $stmtinsert->execute();

		if($result){
		echo 'Successfully saved.';
		}else{
		echo 'Failed.';
		}

		}

danill encryption update 2:

	if(isset($_POST['create'])){
		$method = 'aes-256-cbc';
		$string = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		$ekey= substr(str_shuffle($string),0,25);
		$enc_ekey = substr(hash('sha256', $ekey, true), 0, 32);

		$iv = chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0);

		$email = $_POST['email'];
		$username = $_POST['username'];
		$password = $_POST['password'];

		$enc_email = base64_encode(openssl_encrypt($email, $method, $enc_ekey, OPENSSL_RAW_DATA, $iv));
		$dec_email = openssl_decrypt(base64_decode($enc_email), $method, $enc_ekey, OPENSSL_RAW_DATA, $iv);

		$enc_pass = base64_encode(openssl_encrypt($password, $method, $enc_ekey, OPENSSL_RAW_DATA, $iv));
		$dec_pass = openssl_decrypt(base64_decode($enc_pass), $method, $enc_ekey, OPENSSL_RAW_DATA, $iv);
		
		$sql ="INSERT INTO useraccounts_test (email, username, password, ekey ) VALUES(:email,:username,:password, :ekey)";	

		echo 'ekey=' . $ekey . "\n";
		echo 'cipher=' . $method . "\n";
		echo 'enc_email to: ' . $enc_email . "\n";
		echo 'dec_email to: ' . $dec_email . "\n\n";
		echo 'username to: ' . $username . "\n";
		echo 'enc_pass to: ' . $enc_pass . "\n";
		echo 'dec_pass to: ' . $dec_pass . "\n\n";

		$stmtinsert = $db->prepare($sql);
		$stmtinsert->bindParam(':email', $enc_email);
		$stmtinsert->bindParam(':username', $username);
		$stmtinsert->bindParam(':password', $enc_pass);
		$stmtinsert->bindParam(':ekey', $ekey);
		$result = $stmtinsert->execute();




		if($result){
		echo 'Successfully saved.';
		}else{
		echo 'Failed.';
		}

		}


confirm password update:

		if(isset($_POST['create'])){

		if ($_POST['password'] === $_POST['re-password']) {
			$method = 'aes-256-cbc';
			$string = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
			$ekey= substr(str_shuffle($string),0,25);
			$enc_ekey = substr(hash('sha256', $ekey, true), 0, 32);

			$iv = chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0);

			$email = $_POST['email'];
			$username = $_POST['username'];
			$password = $_POST['password'];

			$enc_email = base64_encode(openssl_encrypt($email, $method, $enc_ekey, OPENSSL_RAW_DATA, $iv));
			$dec_email = openssl_decrypt(base64_decode($enc_email), $method, $enc_ekey, OPENSSL_RAW_DATA, $iv);

			$enc_pass = base64_encode(openssl_encrypt($password, $method, $enc_ekey, OPENSSL_RAW_DATA, $iv));
			$dec_pass = openssl_decrypt(base64_decode($enc_pass), $method, $enc_ekey, OPENSSL_RAW_DATA, $iv);
		
			$sql ="INSERT INTO useraccounts_test (email, username, password, ekey ) VALUES(:email,:username,:password, :ekey)";	

			$stmtinsert = $db->prepare($sql);
			$stmtinsert->bindParam(':email', $enc_email);
			$stmtinsert->bindParam(':username', $username);
			$stmtinsert->bindParam(':password', $enc_pass);
			$stmtinsert->bindParam(':ekey', $ekey);
			$result = $stmtinsert->execute();

			if($result){
			echo 'Successfully saved.';
			}else{
			echo 'Failed.';
			}

		 }
		 else {
			echo "Failed. Password doesn't match.";
		 }
		
		}

encryption code:

	<?php
	$plaintext = 'My secret message 1234';
	$password = '3sc3RLrpd17';
	$method = 'aes-256-cbc';

	// Must be exact 32 chars (256 bit)
	$password = substr(hash('sha256', $password, true), 0, 32);
	echo "Password:" . $password . "\n";

	// IV must be exact 16 chars (128 bit)
	$iv = chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0);

	// av3DYGLkwBsErphcyYp+imUW4QKs19hUnFyyYcXwURU=
	$encrypted = base64_encode(openssl_encrypt($plaintext, $method, $password, OPENSSL_RAW_DATA, $iv));

	// My secret message 1234
	$decrypted = openssl_decrypt(base64_decode($encrypted), $method, $password, OPENSSL_RAW_DATA, $iv);

	echo 'plaintext=' . $plaintext . "\n";
	echo 'cipher=' . $method . "\n";
	echo 'encrypted to: ' . $encrypted . "\n";
	echo 'decrypted to: ' . $decrypted . "\n\n";
	?>

hashed password change:

		if(isset($_POST['create'])){

		if ($_POST['password'] === $_POST['re-password']) {
			$method = 'aes-256-cbc';
			$string = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
			$ekey= substr(str_shuffle($string),0,32);
			$enc_ekey = substr(hash('sha256', $ekey, true), 0, 32);

			$iv = chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0);

			$email = $_POST['email'];
			$username = $_POST['username'];
			$password = $_POST['password'];

			$enc_email = base64_encode(openssl_encrypt($email, $method, $enc_ekey, OPENSSL_RAW_DATA, $iv));
			$dec_email = openssl_decrypt(base64_decode($enc_email), $method, $enc_ekey, OPENSSL_RAW_DATA, $iv);

			$enc_pass = base64_encode(openssl_encrypt($password, $method, $enc_ekey, OPENSSL_RAW_DATA, $iv));
			$dec_pass = openssl_decrypt(base64_decode($enc_pass), $method, $enc_ekey, OPENSSL_RAW_DATA, $iv);
		
			$sql ="INSERT INTO useraccounts_test (email, username, password, ekey ) VALUES(:email,:username,:password, :ekey)";	

			$stmtinsert = $db->prepare($sql);
			$stmtinsert->bindParam(':email', $enc_email);
			$stmtinsert->bindParam(':username', $username);
			$stmtinsert->bindParam(':password', $enc_pass);
			$stmtinsert->bindParam(':ekey', $enc_ekey);
			$result = $stmtinsert->execute();

			if($result){
			echo 'Successfully saved.';
			}else{
			echo 'Failed.';
			}

		 }
		 else {
			echo "Failed. Password doesn't match.";
		 }
		
		}
Feedback page php:(mercury needs to be open php.ini [mail] all ;)

	   
	<body style="min-width: 1200px; ">

	<?php 
	if(isset($_POST['send'])){
		$to = "sup.lockcent@outlook.com"; // this is your Email address
		$from = $_POST['email']; // this is the sender's Email address
		$username = $_POST['username'];
		$rating = $_POST['RadioOptions'];
		$subject = "Form submission";
		$subject2 = "Copy of your form submission";
		$message = "Username: ". $username ."\n\nRating: " . $rating . "\n\nComments: " . "\n\n" . $_POST['Textarea'];
		$message2 = "Here is a copy of your message " . $username . "\n\nRating: " . $rating . "\n\nComments: " . "\n\n" . $_POST['Textarea'];

		$headers = "From:" . $from;
		$headers2 = "From:" . $to;
		$send =mail($to,$subject,$message,$headers);
		
		if ($send)
		{
			echo "Mail Sent. Thank you " . $username ;
			$send2 =mail($from,$subject2,$message2,$headers2); // sends a copy of the message to the sender
		}
		else
			echo "Error";
		}
	?>

		<div style="max-height: 100%; max-width:80%; margin: 0 auto; padding: 10px; background-color: rgba(150, 147, 147, 0.5);">
			<div class="container"> 
				<br>  
				<h1>Feedback:</h1>
				<hr class="mb-3">
				<form action="" method="post">
					<div class="form-group">
					<label for="email"><b>Email address</b></label>
					<input type="email" class="form-control" id="email" name="email">
					</div>
					<br>
					<div class="form-group">
					<label for="username"><b>Username</b></label>
					<input type="text" class="form-control" id="username" name="username">
					</div>
					<br>
					<div class="form-group">
					<label for="form-check form-check-inline"><b>How was your experience with our project?</b></label>
					<br>
					<div class="form-group">
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="radio" name="RadioOptions" id="inlineRadio1" value="option1">
						<label class="form-check-label" for="inlineRadio1">Very Bad</label>
					</div>
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="radio" name="RadioOptions" id="inlineRadio2" value="option2">
						<label class="form-check-label" for="inlineRadio2">Bad</label>
					</div>
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="radio" name="RadioOptions" id="inlineRadio3" value="option3">
						<label class="form-check-label" for="inlineRadio3">Average</label>
					</div>
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="radio" name="RadioOptions" id="inlineRadio4" value="option4">
						<label class="form-check-label" for="inlineRadio4">Good</label>
					</div>
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="radio" name="RadioOptions" id="inlineRadio5" value="option5">
						<label class="form-check-label" for="inlineRadio5">Very Good</label>
					</div>
					</div>
					<br>
					<div class="form-group">
					<label for="Textarea1"><b>Comments:</b></label>
					<textarea class="form-control" id="Textarea" name="Textarea" rows="5"></textarea>
					</div>
					
					<hr class="mb-3">
					<input class="btn btn-primary" type="submit" id="send" name="send" value="Send">
				</form>
			</div>
		</div>








bruhhhhhhh:

	<div>
		<?php
		if(isset($_POST['create'])){

			if ($_POST['password'] === $_POST['re-password']) {
				$method = 'aes-256-cbc';
				$string = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
				$ekey= substr(str_shuffle($string),0,32);
				$enc_ekey = substr(hash('sha256', $ekey, true), 0, 32);

				$iv = chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0) . chr(0x0);

				$email = $_POST['email'];
				$username = $_POST['username'];
				$password = $_POST['password'];

				$enc_email = base64_encode(openssl_encrypt($email, $method, $enc_ekey, OPENSSL_RAW_DATA, $iv));
				$dec_email = openssl_decrypt(base64_decode($enc_email), $method, $enc_ekey, OPENSSL_RAW_DATA, $iv);

				$enc_pass = base64_encode(openssl_encrypt($password, $method, $enc_ekey, OPENSSL_RAW_DATA, $iv));
				$dec_pass = openssl_decrypt(base64_decode($enc_pass), $method, $enc_ekey, OPENSSL_RAW_DATA, $iv);
			
				$sql ="INSERT INTO user_accounts (email, username, password, ekey ) VALUES(:email,:username,:password, :ekey)";	

				$stmtinsert = $db->prepare($sql);
				$stmtinsert->bindParam(':email', $enc_email);
				$stmtinsert->bindParam(':username', $username);
				$stmtinsert->bindParam(':password', $enc_pass);
				$stmtinsert->bindParam(':ekey', $enc_ekey);
				$result = $stmtinsert->execute();

				if($result){
				echo 'Successfully saved.';
				}else{
				echo 'Failed.';
				}

			}
			else {
				echo "Failed. Password doesn't match.";
			}
			
			}
		?>	
	</div>

dashboard:

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="css/bootstrap.min.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@5.1.3/font/bootstrap-icons.css"
    />
    <link rel="stylesheet" href="css/dataTables.bootstrap5.min.css" />
    <link rel="stylesheet" href="css/style.css" />
	<link href="../LockCent.css"  rel="stylesheet">
    <title>LockCent | User</title>
  </head>
  <body>
    <!-- top navigation bar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
      <div class="container-fluid">
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="offcanvas"
          data-bs-target="#sidebar"
          aria-controls="offcanvasExample"
        >
          <span class="navbar-toggler-icon" data-bs-target="#sidebar"></span>
        </button>
        <a class="navbar-brand ms-lg-0 ms-3 fw-bold" href="#"><img src="images/LockCent_w.png" alt="Logo" width="50" class="px-lg-2">LockCent</a>
       
        <div class="collapse navbar-collapse" id="topNavBar"> 
          <ul class=" d-flex ms-auto navbar-nav mr-auto mt-2 mt-lg-0">
            <li class="nav-item dropdown">
              <a
                class="nav-link dropdown-toggle ms-2"
                href="#"
                role="button"
                data-bs-toggle="dropdown"
                aria-expanded="false"
              >My account
              </a>
              <ul class="dropdown-menu dropdown-menu-end">
                <li><a class="dropdown-item" href="#">Settings</a></li>
                <li><a class="dropdown-item" href="#">Logout</a></li>
              </ul>
            </li>
          </ul>
        </div>
      </div>
    </nav>
    <!-- top navigation bar -->
    <!-- offcanvas -->
    <div
      class="offcanvas offcanvas-start sidebar-nav bg-light"
      tabindex="-1"
      id="sidebar"
    >
      <div class="offcanvas-body p-0">
        <nav class="navbar-light">
          <ul class="navbar-nav">
            <br>
            <li>
              <div class="text-muted small fw-bold text-uppercase px-3">
                CORE
              </div>
            </li>
            <li>
              <a href="#" class="nav-link px-3 active">
                <span class="me-2"><i class="bi bi-speedometer2"></i></span>
                <span>Dashboard</span>
              </a>
            </li>
            <li class="my-4"><hr class="dropdown-divider bg-dark" /></li>
            <li>
              <div class="text-muted small fw-bold text-uppercase px-3 mb-3">
                Interface
              </div>
            </li>
            <li>
              <a href="#" class="nav-link px-3">
                <span class="me-2"><i class="bi bi-book-fill"></i></span>
                <span>Pages</span>
              </a>
            </li>
            <li class="my-4"><hr class="dropdown-divider bg-dark" /></li>
          </ul>
        </nav>
      </div>
    </div>
    <!-- offcanvas -->
    <main class="mt-5 pt-3">
      <div class="container-fluid">
        <div class="row">
          <div class="col-md-12">
            <h4>Dashboard</h4>
          </div>
        </div> 
        <div class="row">
          <div class="col-md-12 mb-3">
            <div class="card">
              <div class="card-header">
                <span><i class="bi bi-table me-2"></i></span> Data Table
              </div>
              <div class="card-body">
                <div class="table-responsive">
                  <table
                    id="example"
                    class="table table-striped data-table"
                    style="width: 100%"
                  >
                    <thead>
                      <tr>
                        <th>Name</th>
                        <th>Position</th>
                        <th>Office</th>
                        <th>Age</th>
                        <th>Start date</th>
                        <th>Salary</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td>Tiger Nixon</td>
                        <td>System Architect</td>
                        <td>Edinburgh</td>
                        <td>61</td>
                        <td>2011/04/25</td>
                        <td>$320,800</td>
                      </tr>
                    </tbody>
                    <tfoot>
                      <tr>
                        <th>Name</th>
                        <th>Position</th>
                        <th>Office</th>
                        <th>Age</th>
                        <th>Start date</th>
                        <th>Salary</th>
                      </tr>
                    </tfoot>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
    <script src="./js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.0.2/dist/chart.min.js"></script>
    <script src="./js/jquery-3.5.1.js"></script>
    <script src="./js/jquery.dataTables.min.js"></script>
    <script src="./js/dataTables.bootstrap5.min.js"></script>
    <script src="./js/script.js"></script>
  </body>
</html>


old nav:

<nav class="navbar navbar-expand-lg navbar-light bg-light" >
      <div class="navbar-collapse" id="navbarTogglerDemo01">
        <a class="navbar-brand" href="LockCent.html">  <img src="images/LockCent_w.png" alt="Logo" width="50" class="px-lg-2"> LockCent</a>
        <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
          <li class="nav-item active">
            <a class="nav-link" href="LockCent.html">Home </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="https://github.com/LynxarA-Coding/LockCent/releases">Download</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="useraccounts-master/login.php">Login</a>
            </li>
          <li class="nav-item">
            <a class="nav-link" href="useraccounts-master/registration.php">Register</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="Feedback.php">Feedback</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">About Us</a>
          </li>
        </ul>
      </div>
    </nav>
     

	 $db->beginTransaction();
      $st = $db->prepare("DELETE FROM user_accounts WHERE username = '$username'");
      $st->execute(array(':username', $username));
      $st = $db->prepare("DELETE FROM user_data WHERE username = '$username'");
      $st->execute(array(':username', $username));
      $pdo->commit();
	  